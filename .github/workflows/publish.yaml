name: Publish
on:
  workflow_dispatch:
  release:
    types: [released]
jobs:
  publish:
    name: Build artifacts and publish to docker hub and artifactory
    runs-on: ["self-hosted", "general-ubuntu"]
    steps:
      - uses: actions/checkout@v2
      - name: Execute build script
        env:
          GITHUB_TOKEN: ${{ secrets.ROLLSBOT_GITHUB_ACTIONS_TOKEN }}
          ORG_GRADLE_PROJECT_artifactoryAuthToken: ${{ secrets.ARTIFACTORY_AUTH_TOKEN }}
          ORG_GRADLE_PROJECT_artifactoryUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
        run: |
          sdk env install
          ./gradlew build -x test -x detekt
          mv coroutine-demo-server/build/libs ./libs
          cd libs
          java -Djarmode=layertools -jar *.jar extract
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            turo/coroutine-demo-msvc
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            BINNAME=coroutine-demo-msvc
            VERSION=${{ github.event.release.tag_name }}
            GIT_COMMIT=${GITHUB_SHA}
            ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}
            ARTIFACTORY_AUTH_TOKEN=${{ secrets.ARTIFACTORY_AUTH_TOKEN }}
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TURO_GITHUB_TOKEN }}
          repository: turo/coroutine-demo-deployments
          event-type: update-image-tags
          client-payload: |
            {
              "image-tag": "${{ steps.meta.outputs.version }}",
              "reviewers": ""
            }
